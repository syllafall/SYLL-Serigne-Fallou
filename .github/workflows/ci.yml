name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Pour inclure les tags comme 'v1.0.0', si vous utilisez un système de versionnement
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Permet l'exécution manuelle via GitHub UI

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags/*' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags/*' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build

  test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name != 'push' || github.ref != 'refs/tags/*' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: test  # Ne s'exécute que si le job 'test' réussit
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Run Integration Test
        run: echo "Hello Integration !"  # Commande d'intégration

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: integration-test  # Ne s'exécute que si 'integration-test' réussit
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Run E2E test
        run: echo "Hello E2E !"  # Commande simple pour l'instant

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: e2e-test
    if: |
      github.event_name == 'workflow_dispatch' || (
        github.ref == 'refs/heads/main' && 
        github.event.pull_request == null && 
        !(github.event.head_commit.message && startsWith(github.event.head_commit.message, 'chore: release'))
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Release project
        run: echo "Release logic here"  # Remplacez par vos scripts de release

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          cache: 'npm'

      - name: Deploy project
        run: echo "Deploy logic here"  # Remplacez par vos scripts de déploiement
